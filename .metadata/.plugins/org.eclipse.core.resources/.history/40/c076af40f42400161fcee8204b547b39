/*
 * frame.h
 *
 *  Created on: May 24, 2016
 *      Author: Jason
 */

#ifndef FRAME_H_
#define FRAME_H_

#include <Elementary.h>
#include <map>
#include "view.h"
#include "frametoolbar.h"


template<typename TView>
class ViewFactory
{
public:
	static TView* CreateInstance()
	{
		TView* pview = new TView;
		return pview;
	}
};

class FrameWindow
{
public:
	FrameWindow();
	~FrameWindow();

	bool CreateBaseFrame();

	//it returns the view id
	bool AddView(int viewid, View* view);
	View* GetView(int viewid);
	void Show();


private:
	void deleteallviews();
	Evas_Object* createframewindow();
	Evas_Object* createconformation(Evas_Object* parentwnd);
	Evas_Object* createnaviframe(Evas_Object* conformant);
	void handledeleterequest(Evas_Object *obj, void *event_info);
	void my_box_pack(Evas_Object *box, Evas_Object *child, double h_weight, double v_weight, double h_align, double v_align);

	//for callback
	static void delete_request_cb(void *data, Evas_Object *obj, void *event_info);
	View* findview(int viewid);


private:
	Evas_Object* m_framewnd;
	Evas_Object* m_conformant;
	Evas_Object* m_naviframe;
	std::map<int, View*> m_viewmap;
	frametoolbar* m_toobar;
	Elm_Object* m_box

};


#endif /* FRAME_H_ */
