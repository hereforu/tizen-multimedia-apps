/*
 * frame.cpp
 *
 *  Created on: May 24, 2016
 *      Author: Jason
 */

#include "apptemplate.h"
#include "frame.h"


FrameWindow::FrameWindow()
{

}
FrameWindow::~FrameWindow()
{

}

bool FrameWindow::CreateBaseFrame()
{
	m_win = createframewindow();
	m_conform = createconformation(m_win);
}

Evas_Object* FrameWindow::createframewindow()
{
	Evas_Object* pframewnd = NULL;
	/* Window */
	/* Create and initialize elm_win.
	   elm_win is mandatory to manipulate window. */
	pframewnd = elm_win_util_standard_add(PACKAGE, PACKAGE);
	elm_win_conformant_set(pframewnd, EINA_TRUE);
	elm_win_autodel_set(pframewnd, EINA_TRUE);

	if (elm_win_wm_rotation_supported_get(pframewnd)) {
		int rots[4] = { 0, 90, 180, 270 };
		elm_win_wm_rotation_available_rotations_set(pframewnd, (const int *)(&rots), 4);
	}

	evas_object_smart_callback_add(pframewnd, "delete,request", delete_request_cb, this);

	return pframewnd;
}
void FrameWindow::delete_request_cb(void *data, Evas_Object *obj, void *event_info)
{
	FrameWindow* framewnd = static_cast<FrameWindow*>(data);
	if(framewnd != NULL)
	{
		framewnd->handledeleterequest(obj, event_info);
		return;
	}
	//assert
}
void FrameWindow::handledeleterequest(Evas_Object *obj, void *event_info)
{
	ui_app_exit();
}

Evas_Object* FrameWindow::createconformation(Evas_Object* parentwnd)
{
	Evas_Object* pconformation = NULL;
	/* Conformant */
	/* Create and initialize elm_conformant.
	   elm_conformant is mandatory for base gui to have proper size
	   when indicator or virtual keypad is visible. */
	pconformation = elm_conformant_add(m_win);
	elm_win_indicator_mode_set(m_win, ELM_WIN_INDICATOR_SHOW);
	elm_win_indicator_opacity_set(m_win, ELM_WIN_INDICATOR_OPAQUE);
	evas_object_size_hint_weight_set(pconformation, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
	elm_win_resize_object_add(m_win, pconformation);
	evas_object_show(pconformation);

	return pconformation;
}



